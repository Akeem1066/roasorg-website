"use strict";(()=>{var e={};e.id=524,e.ids=[524],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,s)=>{Object.defineProperty(s,"l",{enumerable:!0,get:function(){return function e(s,t){return t in s?s[t]:"then"in s&&"function"==typeof s.then?s.then(s=>e(s,t)):"function"==typeof s&&"default"===t?s:void 0}}})},122:(e,s,t)=>{t.r(s),t.d(s,{config:()=>d,default:()=>i,routeModule:()=>l});var r={};t.r(r),t.d(r,{default:()=>u});var n=t(1802),o=t(7153),a=t(6249);async function u(e,s){if("POST"!==e.method)return s.status(405).json({message:"Method not allowed"});try{let{token:t,password:r}=e.body;if(!t)return s.status(400).json({message:"Reset token is required"});if(!r)return s.status(400).json({message:"New password is required"});if(r.length<8)return s.status(400).json({message:"Password must be at least 8 characters long"});if(console.log(`Password reset attempted with token: ${t}`),console.log(`New password length: ${r.length} characters`),await new Promise(e=>setTimeout(e,1e3)),t.length<10)return s.status(400).json({message:"Invalid or expired reset token"});s.status(200).json({message:"Password reset successful",success:!0})}catch(e){console.error("Reset password error:",e),s.status(500).json({message:"Internal server error",success:!1})}}let i=(0,a.l)(r,"default"),d=(0,a.l)(r,"config"),l=new n.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/auth/reset-password",pathname:"/api/auth/reset-password",bundlePath:"",filename:""},userland:r})},7153:(e,s)=>{var t;Object.defineProperty(s,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,s,t)=>{e.exports=t(145)}};var s=require("../../../webpack-api-runtime.js");s.C(e);var t=s(s.s=122);module.exports=t})();